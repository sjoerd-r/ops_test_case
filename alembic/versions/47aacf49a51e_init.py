"""init

Revision ID: 47aacf49a51e
Revises: 
Create Date: 2025-08-22 17:33:33.763676

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '47aacf49a51e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create base tables first
    op.create_table('stores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('shopify_store_id', sa.BigInteger(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('domain', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shopify_store_id')
    )
    op.create_index('idx_stores_shopify_id', 'stores', ['shopify_store_id'], unique=False)
    # Create products table 
    op.create_table('products',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('shopify_product_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('body_html', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('vendor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('handle', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_products_shopify_id', 'products', ['store_id', 'shopify_product_id'], unique=False)
    # Create product_media table 
    op.create_table('product_media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.BigInteger(), nullable=False),
    sa.Column('shopify_media_id', sa.BigInteger(), nullable=False),
    sa.Column('media_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('src', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('alt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_media_shopify_id', 'product_media', ['product_id', 'shopify_media_id'], unique=False)
    op.create_table('product_variants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.BigInteger(), nullable=False),
    sa.Column('shopify_variant_id', sa.BigInteger(), nullable=False),
    sa.Column('inventory_item_id', sa.BigInteger(), nullable=True),
    sa.Column('sku', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('barcode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('option1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('option2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('option3', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('compare_at_price', sa.Numeric(), nullable=True),
    sa.Column('inventory_quantity', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('weight_unit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('requires_shipping', sa.Boolean(), nullable=True),
    sa.Column('taxable', sa.Boolean(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('image_id', sa.BigInteger(), nullable=True),
    sa.Column('available_for_sale', sa.Boolean(), nullable=True),
    sa.Column('inventory_policy', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('inventory_management', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fulfillment_service', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tax_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('unit_price', sa.Numeric(), nullable=True),
    sa.Column('unit_price_measurement', sa.JSON(), nullable=True),
    sa.Column('selected_options', sa.JSON(), nullable=True),
    sa.Column('metafields', sa.JSON(), nullable=True),
    sa.Column('legacy_resource_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['product_media.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_variants_shopify_id', 'product_variants', ['product_id', 'shopify_variant_id'], unique=False)
    op.create_index('idx_variants_shopify_variant_id', 'product_variants', ['shopify_variant_id'], unique=False)
    op.create_index(op.f('ix_product_variants_barcode'), 'product_variants', ['barcode'], unique=False)
    op.create_index(op.f('ix_product_variants_sku'), 'product_variants', ['sku'], unique=False)
    # Create inventory_items table after product_variants  
    op.create_table('inventory_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('variant_id', sa.BigInteger(), nullable=False),
    sa.Column('shopify_inventory_item_id', sa.BigInteger(), nullable=True),
    sa.Column('sku', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tracked', sa.Boolean(), nullable=True),
    sa.Column('requires_shipping', sa.Boolean(), nullable=True),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('country_code_of_origin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('province_code_of_origin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('harmonized_system_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_harmonized_system_codes', sa.JSON(), nullable=True),
    sa.Column('measurement_weight', sa.Float(), nullable=True),
    sa.Column('measurement_unit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('measurement', sa.JSON(), nullable=True),
    sa.Column('tracked_editable', sa.JSON(), nullable=True),
    sa.Column('barcode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('multipack', sa.Boolean(), nullable=True),
    sa.Column('case_upc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('legacy_resource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('duplicate_sku_count', sa.Integer(), nullable=True),
    sa.Column('inventory_history_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shopify_inventory_item_id')
    )
    op.create_index('idx_inventory_item_shopify', 'inventory_items', ['shopify_inventory_item_id'], unique=False)
    op.create_index('idx_inventory_item_variant', 'inventory_items', ['variant_id'], unique=False)
    op.create_index(op.f('ix_inventory_items_barcode'), 'inventory_items', ['barcode'], unique=False)
    op.create_index(op.f('ix_inventory_items_sku'), 'inventory_items', ['sku'], unique=False)
    op.create_foreign_key('fk_product_variants_inventory_item_id', 'product_variants', 'inventory_items', ['inventory_item_id'], ['id'])
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address_line_1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address_line_2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('province', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_suppliers_code', 'suppliers', ['code'], unique=False)
    op.create_index('idx_suppliers_name', 'suppliers', ['name'], unique=False)
    op.create_index('idx_suppliers_status', 'suppliers', ['status'], unique=False)
    op.create_index(op.f('ix_suppliers_code'), 'suppliers', ['code'], unique=True)
    op.create_index(op.f('ix_suppliers_name'), 'suppliers', ['name'], unique=False)
    op.create_table('carriers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tracking_url_template', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_carriers_code', 'carriers', ['store_id', 'code'], unique=False)
    op.create_index('idx_carriers_name', 'carriers', ['name'], unique=False)
    op.create_index('idx_carriers_store', 'carriers', ['store_id'], unique=False)
    op.create_table('channels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('shopify_channel_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('channel_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('handle', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('platform', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shopify_channel_id')
    )
    op.create_index('idx_channels_shopify_channel_id', 'channels', ['shopify_channel_id'], unique=False)
    op.create_index('idx_channels_store_handle', 'channels', ['store_id', 'handle'], unique=False)
    op.create_index(op.f('ix_channels_handle'), 'channels', ['handle'], unique=False)
    op.create_index(op.f('ix_channels_store_id'), 'channels', ['store_id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('shopify_customer_id', sa.BigInteger(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('accepts_marketing', sa.Boolean(), nullable=True),
    sa.Column('accepts_marketing_updated_at', sa.DateTime(), nullable=True),
    sa.Column('email_marketing_consent', sa.JSON(), nullable=True),
    sa.Column('sms_marketing_consent', sa.JSON(), nullable=True),
    sa.Column('marketing_opt_in_level', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('verified_email', sa.Boolean(), nullable=True),
    sa.Column('tax_exempt', sa.Boolean(), nullable=True),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('multipass_identifier', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('orders_count', sa.Integer(), nullable=True),
    sa.Column('total_spent', sa.Numeric(), nullable=True),
    sa.Column('last_order_id', sa.BigInteger(), nullable=True),
    sa.Column('last_order_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_customers_email', 'customers', ['store_id', 'email'], unique=False)
    op.create_index('idx_customers_phone', 'customers', ['store_id', 'phone'], unique=False)
    op.create_index('idx_customers_shopify_id', 'customers', ['store_id', 'shopify_customer_id'], unique=False)
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=False)
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('shopify_location_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address', sa.JSON(), nullable=True),
    sa.Column('address_verified', sa.Boolean(), nullable=True),
    sa.Column('suggested_addresses', sa.JSON(), nullable=True),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('handle', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('platform', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fulfills_online_orders', sa.Boolean(), nullable=True),
    sa.Column('has_active_inventory', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_fulfillment_service', sa.Boolean(), nullable=True),
    sa.Column('ships_inventory', sa.Boolean(), nullable=True),
    sa.Column('deactivatable', sa.Boolean(), nullable=True),
    sa.Column('activatable', sa.Boolean(), nullable=True),
    sa.Column('deletable', sa.Boolean(), nullable=True),
    sa.Column('deactivated_at', sa.DateTime(), nullable=True),
    sa.Column('fulfillment_service_id', sa.BigInteger(), nullable=True),
    sa.Column('metafields', sa.JSON(), nullable=True),
    sa.Column('legacy_resource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_locations_handle', 'locations', ['handle'], unique=False)
    op.create_index('idx_locations_shopify_id', 'locations', ['store_id', 'shopify_location_id'], unique=False)
    op.create_index(op.f('ix_locations_handle'), 'locations', ['handle'], unique=False)
    op.create_table('shipping_zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('shopify_zone_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('countries', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_zones_shopify_id', 'shipping_zones', ['store_id', 'shopify_zone_id'], unique=False)
    op.create_table('customer_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('shopify_address_id', sa.BigInteger(), nullable=False),
    sa.Column('shopify_customer_id', sa.BigInteger(), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('province', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('province_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('zip', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shopify_address_id')
    )
    op.create_index('idx_customer_addresses_customer', 'customer_addresses', ['customer_id'], unique=False)
    op.create_index('idx_customer_addresses_shopify_id', 'customer_addresses', ['shopify_address_id'], unique=False)
    op.create_index(op.f('ix_customer_addresses_customer_id'), 'customer_addresses', ['customer_id'], unique=False)
    op.create_table('fulfillment_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('shopify_fulfillment_service_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('handle', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('callback_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('tracking_support', sa.Boolean(), nullable=True),
    sa.Column('permits_sku_sharing', sa.Boolean(), nullable=True),
    sa.Column('requires_shipping_method', sa.Boolean(), nullable=True),
    sa.Column('fulfillment_orders_opt_in', sa.Boolean(), nullable=True),
    sa.Column('include_pending_stock', sa.Boolean(), nullable=True),
    sa.Column('inventory_management', sa.Boolean(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fulfillment_services_store', 'fulfillment_services', ['store_id'], unique=False)
    op.create_index(op.f('ix_fulfillment_services_handle'), 'fulfillment_services', ['handle'], unique=False)
    op.create_table('inventory_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.BigInteger(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('shopify_inventory_level_id', sa.BigInteger(), nullable=True),
    sa.Column('shopify_inventory_item_id', sa.BigInteger(), nullable=True),
    sa.Column('shopify_location_id', sa.BigInteger(), nullable=True),
    sa.Column('can_deactivate', sa.Boolean(), nullable=True),
    sa.Column('deactivation_alert', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('quantities', sa.JSON(), nullable=True),
    sa.Column('scheduled_changes', sa.JSON(), nullable=True),
    sa.Column('legacy_resource_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('shopify_inventory_level_id')
    )
    op.create_index('idx_inventory_item_loc', 'inventory_levels', ['inventory_item_id', 'location_id'], unique=False)
    op.create_index('idx_inventory_level_shopify', 'inventory_levels', ['shopify_inventory_level_id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('store_id', sa.Integer(), nullable=False),
    sa.Column('shopify_order_id', sa.BigInteger(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('order_number', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_price', sa.Numeric(), nullable=True),
    sa.Column('subtotal_price', sa.Numeric(), nullable=True),
    sa.Column('total_tax', sa.Numeric(), nullable=True),
    sa.Column('total_discounts', sa.Numeric(), nullable=True),
    sa.Column('total_line_items_price', sa.Numeric(), nullable=True),
    sa.Column('total_weight', sa.Numeric(), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('presentment_currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('taxes_included', sa.Boolean(), nullable=True),
    sa.Column('financial_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fulfillment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('note_attributes', sa.JSON(), nullable=True),
    sa.Column('source_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_identifier', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('app_id', sa.BigInteger(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('device_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('browser_ip', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('landing_site', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('referring_site', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('customer_locale', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cart_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('checkout_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('test', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.Column('cancel_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_gateway_names', sa.JSON(), nullable=True),
    sa.Column('payment_terms', sa.JSON(), nullable=True),
    sa.Column('order_status_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order_edit_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_orders_created', 'orders', ['created_at'], unique=False)
    op.create_index('idx_orders_customer', 'orders', ['customer_id'], unique=False)
    op.create_index('idx_orders_email', 'orders', ['email'], unique=False)
    op.create_index('idx_orders_fulfillment', 'orders', ['fulfillment_status'], unique=False)
    op.create_index('idx_orders_order_number', 'orders', ['order_number'], unique=False)
    op.create_index('idx_orders_processed', 'orders', ['processed_at'], unique=False)
    op.create_index('idx_orders_shopify_id', 'orders', ['shopify_order_id'], unique=False)
    op.create_index('idx_orders_status', 'orders', ['financial_status'], unique=False)
    op.create_index('idx_orders_store', 'orders', ['store_id'], unique=False)
    op.create_index('idx_orders_store_created', 'orders', ['store_id', 'created_at'], unique=False)
    op.create_index('idx_orders_store_shopify', 'orders', ['store_id', 'shopify_order_id'], unique=False)
    op.create_table('product_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.BigInteger(), nullable=False),
    sa.Column('shopify_option_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('values', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_options_shopify_id', 'product_options', ['product_id', 'shopify_option_id'], unique=False)
    op.create_table('fulfillment_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('shopify_fulfillment_order_id', sa.BigInteger(), nullable=False),
    sa.Column('assigned_location_id', sa.Integer(), nullable=True),
    sa.Column('channel_id', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('request_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('supported_actions', sa.JSON(), nullable=True),
    sa.Column('destination', sa.JSON(), nullable=True),
    sa.Column('delivery_method', sa.JSON(), nullable=True),
    sa.Column('fulfill_at', sa.DateTime(), nullable=True),
    sa.Column('fulfill_by', sa.DateTime(), nullable=True),
    sa.Column('merchant_requests', sa.JSON(), nullable=True),
    sa.Column('fulfillment_holds', sa.JSON(), nullable=True),
    sa.Column('international_duties', sa.JSON(), nullable=True),
    sa.Column('order_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order_processed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fulfillment_orders_channel', 'fulfillment_orders', ['channel_id'], unique=False)
    op.create_index('idx_fulfillment_orders_location', 'fulfillment_orders', ['assigned_location_id'], unique=False)
    op.create_index('idx_fulfillment_orders_shopify', 'fulfillment_orders', ['order_id', 'shopify_fulfillment_order_id'], unique=False)
    op.create_table('inventory_adjustments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inventory_level_id', sa.Integer(), nullable=False),
    sa.Column('quantity_adjusted', sa.Integer(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reference_document_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('app_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_level_id'], ['inventory_levels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_inventory_adj_created', 'inventory_adjustments', ['created_at'], unique=False)
    op.create_index('idx_inventory_adj_level', 'inventory_adjustments', ['inventory_level_id'], unique=False)
    op.create_index('idx_inventory_adj_reason', 'inventory_adjustments', ['reason'], unique=False)
    op.create_table('order_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('address_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('province', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('province_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('zip', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('company', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_discounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('shopify_discount_application_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('allocation_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('target_selection', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('target_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('value_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('amount', sa.Numeric(), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_line_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.BigInteger(), nullable=True),
    sa.Column('variant_id', sa.BigInteger(), nullable=True),
    sa.Column('shopify_line_item_id', sa.BigInteger(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sku', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('variant_title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('vendor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fulfillment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('discount_allocations', sa.JSON(), nullable=True),
    sa.Column('tax_lines', sa.JSON(), nullable=True),
    sa.Column('fulfillable_quantity', sa.Integer(), nullable=True),
    sa.Column('grams', sa.Integer(), nullable=True),
    sa.Column('gift_card', sa.Boolean(), nullable=True),
    sa.Column('requires_shipping', sa.Boolean(), nullable=True),
    sa.Column('taxable', sa.Boolean(), nullable=True),
    sa.Column('product_exists', sa.Boolean(), nullable=True),
    sa.Column('total_discount', sa.Numeric(), nullable=True),
    sa.Column('discounted_price', sa.Numeric(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['variant_id'], ['product_variants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_order_line_items_shopify', 'order_line_items', ['order_id', 'shopify_line_item_id'], unique=False)
    op.create_index(op.f('ix_order_line_items_sku'), 'order_line_items', ['sku'], unique=False)
    op.create_table('order_refunds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('shopify_refund_id', sa.BigInteger(), nullable=False),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('restock', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_refunds_shopify', 'order_refunds', ['order_id', 'shopify_refund_id'], unique=False)
    op.create_table('order_returns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('shopify_return_id', sa.BigInteger(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('restock', sa.Boolean(), nullable=True),
    sa.Column('return_line_items', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_returns_shopify', 'order_returns', ['order_id', 'shopify_return_id'], unique=False)
    op.create_table('order_shipping_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('shopify_shipping_line_id', sa.BigInteger(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('carrier_identifier', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('delivery_category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('discounted_price', sa.Numeric(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('requested_fulfillment_service_id', sa.BigInteger(), nullable=True),
    sa.Column('tax_lines', sa.JSON(), nullable=True),
    sa.Column('price_set', sa.JSON(), nullable=True),
    sa.Column('discounted_price_set', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_shipping_lines_shopify', 'order_shipping_lines', ['order_id', 'shopify_shipping_line_id'], unique=False)
    op.create_table('order_taxes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Numeric(), nullable=True),
    sa.Column('rate', sa.Numeric(), nullable=True),
    sa.Column('price_set', sa.JSON(), nullable=True),
    sa.Column('channel_liable', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_order_taxes_order', 'order_taxes', ['order_id'], unique=False)
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('fulfillment_service_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['fulfillment_service_id'], ['fulfillment_services.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_warehouses_location', 'warehouses', ['location_id'], unique=False)
    op.create_index('idx_warehouses_name', 'warehouses', ['name'], unique=False)
    op.create_index(op.f('ix_warehouses_name'), 'warehouses', ['name'], unique=False)
    op.create_table('batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.Column('product_variant_id', sa.Integer(), nullable=False),
    sa.Column('lot', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('manufacturing_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('additional', sa.JSON(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_variant_id'], ['product_variants.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_batches_expiry', 'batches', ['expiry_date'], unique=False)
    op.create_index('idx_batches_expiry_status', 'batches', ['expiry_date', 'status'], unique=False)
    op.create_index('idx_batches_lot', 'batches', ['lot'], unique=False)
    op.create_index('idx_batches_status', 'batches', ['status'], unique=False)
    op.create_index('idx_batches_supplier', 'batches', ['supplier_id'], unique=False)
    op.create_index('idx_batches_supplier_lot', 'batches', ['supplier_id', 'lot'], unique=False)
    op.create_index('idx_batches_variant', 'batches', ['product_variant_id'], unique=False)
    op.create_index('idx_batches_variant_status', 'batches', ['product_variant_id', 'status'], unique=False)
    op.create_index('idx_batches_warehouse', 'batches', ['warehouse_id'], unique=False)
    op.create_index('idx_batches_warehouse_status', 'batches', ['warehouse_id', 'status'], unique=False)
    op.create_index(op.f('ix_batches_lot'), 'batches', ['lot'], unique=False)
    op.create_index(op.f('ix_batches_product_variant_id'), 'batches', ['product_variant_id'], unique=False)
    op.create_index(op.f('ix_batches_status'), 'batches', ['status'], unique=False)
    op.create_index(op.f('ix_batches_supplier_id'), 'batches', ['supplier_id'], unique=False)
    op.create_index(op.f('ix_batches_warehouse_id'), 'batches', ['warehouse_id'], unique=False)
    op.create_table('fulfillment_order_line_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fulfillment_order_id', sa.Integer(), nullable=False),
    sa.Column('order_line_item_id', sa.Integer(), nullable=False),
    sa.Column('shopify_fulfillment_order_line_item_id', sa.BigInteger(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('fulfillable_quantity', sa.Integer(), nullable=True),
    sa.Column('variant_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['fulfillment_order_id'], ['fulfillment_orders.id'], ),
    sa.ForeignKeyConstraint(['order_line_item_id'], ['order_line_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fulfillment_order_line_items_line', 'fulfillment_order_line_items', ['order_line_item_id'], unique=False)
    op.create_index('idx_fulfillment_order_line_items_order', 'fulfillment_order_line_items', ['fulfillment_order_id'], unique=False)
    op.create_index('idx_fulfillment_order_line_items_shopify', 'fulfillment_order_line_items', ['shopify_fulfillment_order_line_item_id'], unique=False)
    op.create_table('order_fulfillments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('shopify_fulfillment_id', sa.BigInteger(), nullable=True),
    sa.Column('shopify_order_id', sa.BigInteger(), nullable=True),
    sa.Column('order_fulfillment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('origin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tracking_company', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tracking_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tracking_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tracking_numbers', sa.JSON(), nullable=True),
    sa.Column('tracking_urls', sa.JSON(), nullable=True),
    sa.Column('shopify_location_id', sa.BigInteger(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.Column('service', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('receipt', sa.JSON(), nullable=True),
    sa.Column('carrier_id', sa.Integer(), nullable=True),
    sa.Column('admin_graphql_api_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notify_customer', sa.Boolean(), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order_edit_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['carrier_id'], ['carriers.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fulfillments_location', 'order_fulfillments', ['location_id'], unique=False)
    op.create_index('idx_fulfillments_order', 'order_fulfillments', ['order_id', 'order_fulfillment_id'], unique=False)
    op.create_index('idx_fulfillments_shopify', 'order_fulfillments', ['order_id', 'shopify_fulfillment_id'], unique=False)
    op.create_index('idx_fulfillments_status', 'order_fulfillments', ['status'], unique=False)
    op.create_index('idx_fulfillments_tracking', 'order_fulfillments', ['tracking_number'], unique=False)
    op.create_index(op.f('ix_order_fulfillments_order_fulfillment_id'), 'order_fulfillments', ['order_fulfillment_id'], unique=True)
    op.create_table('purchase_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('shipment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expected_delivery_date', sa.Date(), nullable=True),
    sa.Column('delivery_date', sa.Date(), nullable=True),
    sa.Column('tracking_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tracking_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('carrier', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_purchase_orders_expected_delivery', 'purchase_orders', ['expected_delivery_date'], unique=False)
    op.create_index('idx_purchase_orders_po_id', 'purchase_orders', ['purchase_order_id'], unique=False)
    op.create_index('idx_purchase_orders_shipment_status', 'purchase_orders', ['shipment_status'], unique=False)
    op.create_index('idx_purchase_orders_status', 'purchase_orders', ['status'], unique=False)
    op.create_index('idx_purchase_orders_supplier', 'purchase_orders', ['supplier_id'], unique=False)
    op.create_index('idx_purchase_orders_warehouse', 'purchase_orders', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_purchase_orders_expected_delivery_date'), 'purchase_orders', ['expected_delivery_date'], unique=False)
    op.create_index(op.f('ix_purchase_orders_purchase_order_id'), 'purchase_orders', ['purchase_order_id'], unique=True)
    op.create_index(op.f('ix_purchase_orders_supplier_id'), 'purchase_orders', ['supplier_id'], unique=False)
    op.create_index(op.f('ix_purchase_orders_tracking_number'), 'purchase_orders', ['tracking_number'], unique=False)
    op.create_index(op.f('ix_purchase_orders_warehouse_id'), 'purchase_orders', ['warehouse_id'], unique=False)
    op.create_table('zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_zones_floor', 'zones', ['warehouse_id', 'floor'], unique=False)
    op.create_index('idx_zones_name', 'zones', ['warehouse_id', 'name'], unique=False)
    op.create_index('idx_zones_warehouse', 'zones', ['warehouse_id'], unique=False)
    op.create_index(op.f('ix_zones_floor'), 'zones', ['floor'], unique=False)
    op.create_index(op.f('ix_zones_name'), 'zones', ['name'], unique=False)
    op.create_index(op.f('ix_zones_warehouse_id'), 'zones', ['warehouse_id'], unique=False)
    op.create_table('aisles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('zone_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_aisles_name', 'aisles', ['zone_id', 'name'], unique=False)
    op.create_index('idx_aisles_zone', 'aisles', ['zone_id'], unique=False)
    op.create_index(op.f('ix_aisles_name'), 'aisles', ['name'], unique=False)
    op.create_index(op.f('ix_aisles_zone_id'), 'aisles', ['zone_id'], unique=False)
    op.create_table('fulfillment_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_fulfillment_id', sa.Integer(), nullable=False),
    sa.Column('shopify_fulfillment_event_id', sa.BigInteger(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('happened_at', sa.DateTime(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('province', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('zip', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('shop_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_fulfillment_id'], ['order_fulfillments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fulfillment_events_fulfillment', 'fulfillment_events', ['order_fulfillment_id'], unique=False)
    op.create_index('idx_fulfillment_events_shopify', 'fulfillment_events', ['shopify_fulfillment_event_id'], unique=False)
    op.create_table('fulfillment_line_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_fulfillment_id', sa.Integer(), nullable=False),
    sa.Column('order_line_item_id', sa.Integer(), nullable=False),
    sa.Column('shopify_fulfillment_line_item_id', sa.BigInteger(), nullable=True),
    sa.Column('shopify_order_id', sa.BigInteger(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_fulfillment_id'], ['order_fulfillments.id'], ),
    sa.ForeignKeyConstraint(['order_line_item_id'], ['order_line_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fulfillment_line_items_fulfillment', 'fulfillment_line_items', ['order_fulfillment_id'], unique=False)
    op.create_index('idx_fulfillment_line_items_order_line', 'fulfillment_line_items', ['order_line_item_id'], unique=False)
    op.create_index('idx_fulfillment_line_items_shopify', 'fulfillment_line_items', ['shopify_fulfillment_line_item_id'], unique=False)
    op.create_table('purchase_order_line_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_id', sa.Integer(), nullable=False),
    sa.Column('product_variant_id', sa.Integer(), nullable=False),
    sa.Column('ordered', sa.Integer(), nullable=False),
    sa.Column('received', sa.Integer(), nullable=False),
    sa.Column('outstanding', sa.Integer(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_delivery_date', sa.DateTime(), nullable=True),
    sa.Column('last_delivery_date', sa.DateTime(), nullable=True),
    sa.Column('expected_completion_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_variant_id'], ['product_variants.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_id'], ['purchase_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_po_line_items_po', 'purchase_order_line_items', ['purchase_order_id'], unique=False)
    op.create_index('idx_po_line_items_po_variant', 'purchase_order_line_items', ['purchase_order_id', 'product_variant_id'], unique=False)
    op.create_index('idx_po_line_items_status', 'purchase_order_line_items', ['status'], unique=False)
    op.create_index('idx_po_line_items_variant', 'purchase_order_line_items', ['product_variant_id'], unique=False)
    op.create_index(op.f('ix_purchase_order_line_items_product_variant_id'), 'purchase_order_line_items', ['product_variant_id'], unique=False)
    op.create_index(op.f('ix_purchase_order_line_items_purchase_order_id'), 'purchase_order_line_items', ['purchase_order_id'], unique=False)
    op.create_table('racks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aisle_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['aisle_id'], ['aisles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_racks_aisle', 'racks', ['aisle_id'], unique=False)
    op.create_index('idx_racks_position', 'racks', ['aisle_id', 'position'], unique=False)
    op.create_index(op.f('ix_racks_aisle_id'), 'racks', ['aisle_id'], unique=False)
    op.create_table('bins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rack_id', sa.Integer(), nullable=False),
    sa.Column('level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prefix', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('accessible', sa.Boolean(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bins_accessibility', 'bins', ['accessible'], unique=False)
    op.create_index('idx_bins_level', 'bins', ['rack_id', 'level'], unique=False)
    op.create_index('idx_bins_prefix', 'bins', ['prefix'], unique=False)
    op.create_index('idx_bins_rack', 'bins', ['rack_id'], unique=False)
    op.create_index('idx_bins_status', 'bins', ['status'], unique=False)
    op.create_index(op.f('ix_bins_level'), 'bins', ['level'], unique=False)
    op.create_index(op.f('ix_bins_prefix'), 'bins', ['prefix'], unique=False)
    op.create_index(op.f('ix_bins_rack_id'), 'bins', ['rack_id'], unique=False)
    op.create_table('bin_positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bin_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bin_id'], ['bins.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bin_positions_bin', 'bin_positions', ['bin_id'], unique=False)
    op.create_index('idx_bin_positions_bin_status', 'bin_positions', ['bin_id', 'status'], unique=False)
    op.create_index('idx_bin_positions_location', 'bin_positions', ['location'], unique=False)
    op.create_index('idx_bin_positions_location_prefix', 'bin_positions', ['location'], unique=False, postgresql_ops={'location': 'varchar_pattern_ops'})
    op.create_index('idx_bin_positions_location_status', 'bin_positions', ['location', 'status'], unique=False)
    op.create_index('idx_bin_positions_position', 'bin_positions', ['bin_id', 'position'], unique=False)
    op.create_index('idx_bin_positions_status', 'bin_positions', ['status'], unique=False)
    op.create_index('idx_bin_positions_status_bin', 'bin_positions', ['status', 'bin_id'], unique=False)
    op.create_index(op.f('ix_bin_positions_bin_id'), 'bin_positions', ['bin_id'], unique=False)
    op.create_index(op.f('ix_bin_positions_location'), 'bin_positions', ['location'], unique=True)
    op.create_table('pallets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bin_position_id', sa.Integer(), nullable=True),
    sa.Column('batch_id', sa.Integer(), nullable=True),
    sa.Column('product_variant_id', sa.Integer(), nullable=True),
    sa.Column('purchase_order_line_item_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['batch_id'], ['batches.id'], ),
    sa.ForeignKeyConstraint(['bin_position_id'], ['bin_positions.id'], ),
    sa.ForeignKeyConstraint(['product_variant_id'], ['product_variants.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_line_item_id'], ['purchase_order_line_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pallets_batch', 'pallets', ['batch_id'], unique=False)
    op.create_index('idx_pallets_code', 'pallets', ['code'], unique=False)
    op.create_index('idx_pallets_po_line', 'pallets', ['purchase_order_line_item_id'], unique=False)
    op.create_index('idx_pallets_position', 'pallets', ['bin_position_id'], unique=False)
    op.create_index('idx_pallets_status', 'pallets', ['status'], unique=False)
    op.create_index('idx_pallets_variant', 'pallets', ['product_variant_id'], unique=False)
    op.create_index(op.f('ix_pallets_batch_id'), 'pallets', ['batch_id'], unique=False)
    op.create_index(op.f('ix_pallets_code'), 'pallets', ['code'], unique=True)
    op.create_index(op.f('ix_pallets_product_variant_id'), 'pallets', ['product_variant_id'], unique=False)
    op.create_index(op.f('ix_pallets_purchase_order_line_item_id'), 'pallets', ['purchase_order_line_item_id'], unique=False)
    op.create_table('pallet_stock',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pallet_id', sa.Integer(), nullable=False),
    sa.Column('product_variant_id', sa.Integer(), nullable=False),
    sa.Column('purchase_order_line_item_id', sa.Integer(), nullable=False),
    sa.Column('inbounded', sa.Integer(), nullable=False),
    sa.Column('forecasted', sa.Integer(), nullable=False),
    sa.Column('reserved', sa.Integer(), nullable=False),
    sa.Column('allocated', sa.Integer(), nullable=False),
    sa.Column('available', sa.Integer(), nullable=False),
    sa.Column('inventory_item_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('received', sa.Date(), nullable=True),
    sa.Column('counted', sa.Date(), nullable=True),
    sa.Column('moved', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_item_id'], ['inventory_items.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['bin_positions.id'], ),
    sa.ForeignKeyConstraint(['pallet_id'], ['pallets.id'], ),
    sa.ForeignKeyConstraint(['product_variant_id'], ['product_variants.id'], ),
    sa.ForeignKeyConstraint(['purchase_order_line_item_id'], ['purchase_order_line_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pallet_stock_available', 'pallet_stock', ['available'], unique=False)
    op.create_index('idx_pallet_stock_inbound', 'pallet_stock', ['purchase_order_line_item_id', 'inbounded'], unique=False)
    op.create_index('idx_pallet_stock_location', 'pallet_stock', ['location_id'], unique=False)
    op.create_index('idx_pallet_stock_pallet', 'pallet_stock', ['pallet_id'], unique=False)
    op.create_index('idx_pallet_stock_po_line', 'pallet_stock', ['purchase_order_line_item_id'], unique=False)
    op.create_index('idx_pallet_stock_variant', 'pallet_stock', ['product_variant_id'], unique=False)
    op.create_index(op.f('ix_pallet_stock_inventory_item_id'), 'pallet_stock', ['inventory_item_id'], unique=False)
    op.create_index(op.f('ix_pallet_stock_location_id'), 'pallet_stock', ['location_id'], unique=False)
    op.create_index(op.f('ix_pallet_stock_pallet_id'), 'pallet_stock', ['pallet_id'], unique=True)
    op.create_index(op.f('ix_pallet_stock_product_variant_id'), 'pallet_stock', ['product_variant_id'], unique=False)
    op.create_index(op.f('ix_pallet_stock_purchase_order_line_item_id'), 'pallet_stock', ['purchase_order_line_item_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pallet_stock_purchase_order_line_item_id'), table_name='pallet_stock')
    op.drop_index(op.f('ix_pallet_stock_product_variant_id'), table_name='pallet_stock')
    op.drop_index(op.f('ix_pallet_stock_pallet_id'), table_name='pallet_stock')
    op.drop_index(op.f('ix_pallet_stock_location_id'), table_name='pallet_stock')
    op.drop_index(op.f('ix_pallet_stock_inventory_item_id'), table_name='pallet_stock')
    op.drop_index('idx_pallet_stock_variant', table_name='pallet_stock')
    op.drop_index('idx_pallet_stock_po_line', table_name='pallet_stock')
    op.drop_index('idx_pallet_stock_pallet', table_name='pallet_stock')
    op.drop_index('idx_pallet_stock_location', table_name='pallet_stock')
    op.drop_index('idx_pallet_stock_inbound', table_name='pallet_stock')
    op.drop_index('idx_pallet_stock_available', table_name='pallet_stock')
    op.drop_table('pallet_stock')
    op.drop_index(op.f('ix_pallets_purchase_order_line_item_id'), table_name='pallets')
    op.drop_index(op.f('ix_pallets_product_variant_id'), table_name='pallets')
    op.drop_index(op.f('ix_pallets_code'), table_name='pallets')
    op.drop_index(op.f('ix_pallets_batch_id'), table_name='pallets')
    op.drop_index('idx_pallets_variant', table_name='pallets')
    op.drop_index('idx_pallets_status', table_name='pallets')
    op.drop_index('idx_pallets_position', table_name='pallets')
    op.drop_index('idx_pallets_po_line', table_name='pallets')
    op.drop_index('idx_pallets_code', table_name='pallets')
    op.drop_index('idx_pallets_batch', table_name='pallets')
    op.drop_table('pallets')
    op.drop_index(op.f('ix_bin_positions_location'), table_name='bin_positions')
    op.drop_index(op.f('ix_bin_positions_bin_id'), table_name='bin_positions')
    op.drop_index('idx_bin_positions_status_bin', table_name='bin_positions')
    op.drop_index('idx_bin_positions_status', table_name='bin_positions')
    op.drop_index('idx_bin_positions_position', table_name='bin_positions')
    op.drop_index('idx_bin_positions_location_status', table_name='bin_positions')
    op.drop_index('idx_bin_positions_location_prefix', table_name='bin_positions', postgresql_ops={'location': 'varchar_pattern_ops'})
    op.drop_index('idx_bin_positions_location', table_name='bin_positions')
    op.drop_index('idx_bin_positions_bin_status', table_name='bin_positions')
    op.drop_index('idx_bin_positions_bin', table_name='bin_positions')
    op.drop_table('bin_positions')
    op.drop_index(op.f('ix_bins_rack_id'), table_name='bins')
    op.drop_index(op.f('ix_bins_prefix'), table_name='bins')
    op.drop_index(op.f('ix_bins_level'), table_name='bins')
    op.drop_index('idx_bins_status', table_name='bins')
    op.drop_index('idx_bins_rack', table_name='bins')
    op.drop_index('idx_bins_prefix', table_name='bins')
    op.drop_index('idx_bins_level', table_name='bins')
    op.drop_index('idx_bins_accessibility', table_name='bins')
    op.drop_table('bins')
    op.drop_index(op.f('ix_racks_aisle_id'), table_name='racks')
    op.drop_index('idx_racks_position', table_name='racks')
    op.drop_index('idx_racks_aisle', table_name='racks')
    op.drop_table('racks')
    op.drop_index(op.f('ix_purchase_order_line_items_purchase_order_id'), table_name='purchase_order_line_items')
    op.drop_index(op.f('ix_purchase_order_line_items_product_variant_id'), table_name='purchase_order_line_items')
    op.drop_index('idx_po_line_items_variant', table_name='purchase_order_line_items')
    op.drop_index('idx_po_line_items_status', table_name='purchase_order_line_items')
    op.drop_index('idx_po_line_items_po_variant', table_name='purchase_order_line_items')
    op.drop_index('idx_po_line_items_po', table_name='purchase_order_line_items')
    op.drop_table('purchase_order_line_items')
    op.drop_index('idx_fulfillment_line_items_shopify', table_name='fulfillment_line_items')
    op.drop_index('idx_fulfillment_line_items_order_line', table_name='fulfillment_line_items')
    op.drop_index('idx_fulfillment_line_items_fulfillment', table_name='fulfillment_line_items')
    op.drop_table('fulfillment_line_items')
    op.drop_index('idx_fulfillment_events_shopify', table_name='fulfillment_events')
    op.drop_index('idx_fulfillment_events_fulfillment', table_name='fulfillment_events')
    op.drop_table('fulfillment_events')
    op.drop_index(op.f('ix_aisles_zone_id'), table_name='aisles')
    op.drop_index(op.f('ix_aisles_name'), table_name='aisles')
    op.drop_index('idx_aisles_zone', table_name='aisles')
    op.drop_index('idx_aisles_name', table_name='aisles')
    op.drop_table('aisles')
    op.drop_index(op.f('ix_zones_warehouse_id'), table_name='zones')
    op.drop_index(op.f('ix_zones_name'), table_name='zones')
    op.drop_index(op.f('ix_zones_floor'), table_name='zones')
    op.drop_index('idx_zones_warehouse', table_name='zones')
    op.drop_index('idx_zones_name', table_name='zones')
    op.drop_index('idx_zones_floor', table_name='zones')
    op.drop_table('zones')
    op.drop_index(op.f('ix_purchase_orders_warehouse_id'), table_name='purchase_orders')
    op.drop_index(op.f('ix_purchase_orders_tracking_number'), table_name='purchase_orders')
    op.drop_index(op.f('ix_purchase_orders_supplier_id'), table_name='purchase_orders')
    op.drop_index(op.f('ix_purchase_orders_purchase_order_id'), table_name='purchase_orders')
    op.drop_index(op.f('ix_purchase_orders_expected_delivery_date'), table_name='purchase_orders')
    op.drop_index('idx_purchase_orders_warehouse', table_name='purchase_orders')
    op.drop_index('idx_purchase_orders_supplier', table_name='purchase_orders')
    op.drop_index('idx_purchase_orders_status', table_name='purchase_orders')
    op.drop_index('idx_purchase_orders_shipment_status', table_name='purchase_orders')
    op.drop_index('idx_purchase_orders_po_id', table_name='purchase_orders')
    op.drop_index('idx_purchase_orders_expected_delivery', table_name='purchase_orders')
    op.drop_table('purchase_orders')
    op.drop_index(op.f('ix_order_fulfillments_order_fulfillment_id'), table_name='order_fulfillments')
    op.drop_index('idx_fulfillments_tracking', table_name='order_fulfillments')
    op.drop_index('idx_fulfillments_status', table_name='order_fulfillments')
    op.drop_index('idx_fulfillments_shopify', table_name='order_fulfillments')
    op.drop_index('idx_fulfillments_order', table_name='order_fulfillments')
    op.drop_index('idx_fulfillments_location', table_name='order_fulfillments')
    op.drop_table('order_fulfillments')
    op.drop_index('idx_fulfillment_order_line_items_shopify', table_name='fulfillment_order_line_items')
    op.drop_index('idx_fulfillment_order_line_items_order', table_name='fulfillment_order_line_items')
    op.drop_index('idx_fulfillment_order_line_items_line', table_name='fulfillment_order_line_items')
    op.drop_table('fulfillment_order_line_items')
    op.drop_index(op.f('ix_batches_warehouse_id'), table_name='batches')
    op.drop_index(op.f('ix_batches_supplier_id'), table_name='batches')
    op.drop_index(op.f('ix_batches_status'), table_name='batches')
    op.drop_index(op.f('ix_batches_product_variant_id'), table_name='batches')
    op.drop_index(op.f('ix_batches_lot'), table_name='batches')
    op.drop_index('idx_batches_warehouse_status', table_name='batches')
    op.drop_index('idx_batches_warehouse', table_name='batches')
    op.drop_index('idx_batches_variant_status', table_name='batches')
    op.drop_index('idx_batches_variant', table_name='batches')
    op.drop_index('idx_batches_supplier_lot', table_name='batches')
    op.drop_index('idx_batches_supplier', table_name='batches')
    op.drop_index('idx_batches_status', table_name='batches')
    op.drop_index('idx_batches_lot', table_name='batches')
    op.drop_index('idx_batches_expiry_status', table_name='batches')
    op.drop_index('idx_batches_expiry', table_name='batches')
    op.drop_table('batches')
    op.drop_index(op.f('ix_warehouses_name'), table_name='warehouses')
    op.drop_index('idx_warehouses_name', table_name='warehouses')
    op.drop_index('idx_warehouses_location', table_name='warehouses')
    op.drop_table('warehouses')
    op.drop_index('idx_order_taxes_order', table_name='order_taxes')
    op.drop_table('order_taxes')
    op.drop_index('idx_shipping_lines_shopify', table_name='order_shipping_lines')
    op.drop_table('order_shipping_lines')
    op.drop_index('idx_returns_shopify', table_name='order_returns')
    op.drop_table('order_returns')
    op.drop_index('idx_refunds_shopify', table_name='order_refunds')
    op.drop_table('order_refunds')
    op.drop_index(op.f('ix_order_line_items_sku'), table_name='order_line_items')
    op.drop_index('idx_order_line_items_shopify', table_name='order_line_items')
    op.drop_table('order_line_items')
    op.drop_table('order_discounts')
    op.drop_table('order_addresses')
    op.drop_index('idx_inventory_adj_reason', table_name='inventory_adjustments')
    op.drop_index('idx_inventory_adj_level', table_name='inventory_adjustments')
    op.drop_index('idx_inventory_adj_created', table_name='inventory_adjustments')
    op.drop_table('inventory_adjustments')
    op.drop_index('idx_fulfillment_orders_shopify', table_name='fulfillment_orders')
    op.drop_index('idx_fulfillment_orders_location', table_name='fulfillment_orders')
    op.drop_index('idx_fulfillment_orders_channel', table_name='fulfillment_orders')
    op.drop_table('fulfillment_orders')
    op.drop_index('idx_options_shopify_id', table_name='product_options')
    op.drop_table('product_options')
    op.drop_index('idx_media_shopify_id', table_name='product_media')
    op.drop_table('product_media')
    op.drop_index('idx_orders_store_shopify', table_name='orders')
    op.drop_index('idx_orders_store_created', table_name='orders')
    op.drop_index('idx_orders_store', table_name='orders')
    op.drop_index('idx_orders_status', table_name='orders')
    op.drop_index('idx_orders_shopify_id', table_name='orders')
    op.drop_index('idx_orders_processed', table_name='orders')
    op.drop_index('idx_orders_order_number', table_name='orders')
    op.drop_index('idx_orders_fulfillment', table_name='orders')
    op.drop_index('idx_orders_email', table_name='orders')
    op.drop_index('idx_orders_customer', table_name='orders')
    op.drop_index('idx_orders_created', table_name='orders')
    op.drop_table('orders')
    op.drop_index('idx_inventory_level_shopify', table_name='inventory_levels')
    op.drop_index('idx_inventory_item_loc', table_name='inventory_levels')
    op.drop_table('inventory_levels')
    op.drop_index(op.f('ix_fulfillment_services_handle'), table_name='fulfillment_services')
    op.drop_index('idx_fulfillment_services_store', table_name='fulfillment_services')
    op.drop_table('fulfillment_services')
    op.drop_index(op.f('ix_customer_addresses_customer_id'), table_name='customer_addresses')
    op.drop_index('idx_customer_addresses_shopify_id', table_name='customer_addresses')
    op.drop_index('idx_customer_addresses_customer', table_name='customer_addresses')
    op.drop_table('customer_addresses')
    op.drop_index('idx_zones_shopify_id', table_name='shipping_zones')
    op.drop_table('shipping_zones')
    op.drop_index('idx_products_shopify_id', table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_locations_handle'), table_name='locations')
    op.drop_index('idx_locations_shopify_id', table_name='locations')
    op.drop_index('idx_locations_handle', table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.drop_index('idx_customers_shopify_id', table_name='customers')
    op.drop_index('idx_customers_phone', table_name='customers')
    op.drop_index('idx_customers_email', table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_channels_store_id'), table_name='channels')
    op.drop_index(op.f('ix_channels_handle'), table_name='channels')
    op.drop_index('idx_channels_store_handle', table_name='channels')
    op.drop_index('idx_channels_shopify_channel_id', table_name='channels')
    op.drop_table('channels')
    op.drop_index('idx_carriers_store', table_name='carriers')
    op.drop_index('idx_carriers_name', table_name='carriers')
    op.drop_index('idx_carriers_code', table_name='carriers')
    op.drop_table('carriers')
    op.drop_index(op.f('ix_suppliers_name'), table_name='suppliers')
    op.drop_index(op.f('ix_suppliers_code'), table_name='suppliers')
    op.drop_index('idx_suppliers_status', table_name='suppliers')
    op.drop_index('idx_suppliers_name', table_name='suppliers')
    op.drop_index('idx_suppliers_code', table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index('idx_stores_shopify_id', table_name='stores')
    op.drop_table('stores')
    op.drop_index(op.f('ix_product_variants_sku'), table_name='product_variants')
    op.drop_index(op.f('ix_product_variants_barcode'), table_name='product_variants')
    op.drop_index('idx_variants_shopify_variant_id', table_name='product_variants')
    op.drop_index('idx_variants_shopify_id', table_name='product_variants')
    op.drop_table('product_variants')
    op.drop_index(op.f('ix_inventory_items_sku'), table_name='inventory_items')
    op.drop_index(op.f('ix_inventory_items_barcode'), table_name='inventory_items')
    op.drop_index('idx_inventory_item_variant', table_name='inventory_items')
    op.drop_index('idx_inventory_item_shopify', table_name='inventory_items')
    op.drop_table('inventory_items')
    # ### end Alembic commands ###
